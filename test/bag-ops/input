⟅ 'x', 'x', 'y', 'y', 'x' ⟆
⟅ 'x', 'x', 'y', 'x' ⟆
⟅ 'y', 'x' ⟆
bagCounts (bag [1,1,2,3,1,3])
bagFromCounts {(1,1), (1,3), (4,0), (2,3)}
bagFromCounts (bagCounts (bag [1,1,2,3,1,3]))
let x = 3 in ⟅ 'a' # (2 + x), 'b', 'b' ⟆
bagFromCounts [('a', 1), ('a', 1), ('a', 2), ('b', 3), ('b', 1)]
bagFromCounts {('a', 1), ('a', 1), ('a', 2), ('b', 3), ('b', 1)}
bagFromCounts ⟅('a', 1), ('a', 1), ('a', 2), ('b', 3), ('b', 1)⟆
